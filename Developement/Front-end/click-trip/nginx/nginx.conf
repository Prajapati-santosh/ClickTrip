server {
  # Listen on port 80 for incoming HTTP requests.
  listen 80;

  # Set the root directory for serving the static files of your React app.
  root /usr/share/nginx/html;

  # This block handles all requests that aren't for the specified API path.
  # The `try_files` directive is crucial for Single-Page Applications (SPAs)
  # like React. It tries to serve a static file first; if the file is not
  # found, it falls back to serving the `index.html` file. This ensures
  # that client-side routing (e.g., direct access to /about) works correctly.
  location / {
    try_files $uri $uri/ /index.html;
  }

  # This location block acts as a reverse proxy for your external API.
  # Any request to the container's `/api/gemini` path will be forwarded.
  location /api/gemini {
    # The `proxy_pass` directive forwards the request to your external API.
    # The trailing slash is important to ensure that the request path is
    # properly handled. For example, a request to `/api/gemini/data` will be
    # forwarded to `https://clicktrip-593362595694.europe-west1.run.app/gemini/data`.
    proxy_pass https://clicktrip-593362595694.europe-west1.run.app/gemini/;

    # These headers are standard for a reverse proxy and ensure that the
    # backend service sees the request as coming from the original client
    # and not from the Nginx server.
    proxy_set_header Host "clicktrip-593362595694.europe-west1.run.app";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}